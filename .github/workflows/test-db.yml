name: MCP Database - Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'mcp-db/**'
      - 'tests/database/**'
      - 'tests/db/**'
      - '.github/workflows/database-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'mcp-db/**'
      - 'tests/database/**'
      - 'tests/db/**'
      - '.github/workflows/database-tests.yml'
  workflow_dispatch: # Allow manual triggering

jobs:
  database-tests:
    name: Schema Tests
    runs-on: ubuntu-latest
    
    # Use PostgreSQL service instead of docker-compose for CI
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: mcp_db_test
          POSTGRES_USER: mcp_user_test
          POSTGRES_PASSWORD: mcp_pass_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5434:5432

    env:
      # Database connection for tests
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5434
      POSTGRES_DB: mcp_db_test
      POSTGRES_USER: mcp_user_test
      POSTGRES_PASSWORD: mcp_pass_test
      DATABASE_URL: postgresql://mcp_user_test:mcp_pass_test@localhost:5434/mcp_db_test
      NODE_ENV: test
      CI: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: 'mcp-db/package-lock.json'

      - name: Install dependencies
        working-directory: ./mcp-db
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5434 -U mcp_user_test; then
              echo "PostgreSQL is ready!"
              break
            fi
            echo "Waiting for PostgreSQL... ($i/30)"
            sleep 2
          done

      - name: Run database migrations
        working-directory: ./mcp-db
        run: |
          echo "Running database migrations..."
          npm run migrate:up
          echo "Migrations completed successfully!"

      - name: Verify migration success
        run: |
          echo "Checking if tables exist..."
          PGPASSWORD=mcp_pass_test psql -h localhost -p 5434 -U mcp_user_test -d mcp_db_test -c "\dt"
          echo "Checking if pgmigrations table exists..."
          PGPASSWORD=mcp_pass_test psql -h localhost -p 5434 -U mcp_user_test -d mcp_db_test -c "\d pgmigrations"

      - name: Test database connection
        run: |
          echo "Testing database connection..."
          PGPASSWORD=mcp_pass_test psql -h localhost -p 5434 -U mcp_user_test -d mcp_db_test -c "SELECT version();"
          echo "Connection successful!"

      - name: Run database tests
        working-directory: ./mcp-db
        run: |
          echo "Running database tests with verbose output..."
          npm run test:db -- --reporter=verbose --no-coverage